
:tex_raw:[[
%https://blog.csdn.net/fansongy/article/details/79303646
]]

:the_book_section:[[s100710]]

读者可能认为使用Qt Quick只需要Qml足以，但不久读者就会失望。
即使退一步，希望Qt Quick可以满足绝大多数需求，这也是难以达成。

Qt Quick不是一种全面代替Qt C++无所不包的解决方案。
Qt Quick只是导出Qt C++的一套接口规范。

当读者面对一个具体的问题，在Qt Quick中无法找到现成的组件或者无法通过
简单修改现有Qt Quick组件达成目的时。使用Qt C++自定义组件就势在必行。

:tex_raw:[[\begin{itemize}]]

:tex_raw:[[\item ]]如果所需的组件不需要几何逻辑，
比如实现一个本地文件监视器，那么只继承自QObject即可；

:tex_raw:[[\item ]]如果所需的组件需要几何逻辑但无需渲染，
比如实现一个鼠标监视器，那么只需要继承自QQuickItem；

:tex_raw:[[\item ]]如果所需的组件需要渲染，
那么需要继承自QQuickItem，并在构造函数中设置
QQuickItem::ItemHasContents标志位；

:tex_raw:[[\item ]]如果希望使用QPainter实现渲染，
那么需要继承自QQuickPaintedItem是一个好的选择；

:tex_raw:[[\item ]]如果仅需要一个简易的OpenGL离屏渲染环境，
那么继承自QQuickFramebufferObject是一个好的选择；

:tex_raw:[[\end{itemize}]]

如:tex_raw:[[\figurename\ \ref{p000010}]]
，列出了C++导出Qt Quick基类继承关系图。

:the_book_image:[[p000010]]

本节展示直接使用C++调用OpenGL绘制，并将其导出到Qt Quick。

本节示例位于目录“QtQmlBook/chapter01/directdrawbyopengl”。

:the_book_image:[[p000011]]

先来看看Qt Quick代码，
如:tex_raw:[[\filesourcenumbernameone\ \ref{f000042}]]。

:the_book_file:[[f000042]]

:tex_raw:[[\begin{itemize}]]

:tex_raw:[[\item ]]第3行引入自定义模块。
其对应的C++代码如:tex_raw:[[\filesourcenumbernameone\ \ref{f000043}]]：
:the_book_file:[[f000043]]

本节的示例依然是静态加载，
实际上Qt Quick也支持以插件的形式动态加载组件。

:tex_raw:[[\item ]]第12~35行演示了如何使用
自定义模块中的类“DrawImageItemRaw”。

使用C++自定义的类与Qt Quick原生元素没有什么不同。
信号槽、平移、旋转、缩放……

不难发现，
使用Qt Quick可以将一切从极高的抽象层上
迅速的组装起来。

:tex_raw:[[\item ]]第38~53行演示了直接在
Qt Quick里面编译Qt Quick源码并以此创建对象。

正如读者所见，
Qt Quick拥有脚本语言的所有特性，
并可以与Qt C++无缝通信。

:tex_raw:[[\end{itemize}]]

接下来再看看Qt C++主要逻辑代码，
如:tex_raw:[[\filesourcenumbernameone\ \ref{f000044}]]所
示。

:tex_raw:[[\begin{itemize}]]

:tex_raw:[[\item ]]第29~44行展示了如何
在Qt C++端从Qml对象树中找到所需对象，并
在Qt C++端创建对象并添加到Qml对象树中。


:tex_raw:[[\item ]]第46~78行展示了如何
在Qt C++端编译Qml并创建对象。

:tex_raw:[[\end{itemize}]]

:the_book_file:[[f000044]]

:the_book_file:[[f000090]]

:the_book_file:[[f000091]]

:tex_raw:[[
% ______all_key_words
% the_book_chapter the_book_subsection the_book_subsubsection
% the_book_section the_book_image the_book_table
% the_book_file the_book_tree_file the_book_command_file
% littlelongworld tabbing ref
% figurename tablename filesourcenumbernameone
% treeindexnumbernameone commandnumbernameone footnote
% item itemize comment textbullet
% \hspace*{\parindent}
% FloatBarrier
]]

