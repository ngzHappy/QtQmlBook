

:tex_raw:[[%]]

:the_book_subsection:[[s100310]]

qmake类似于cmake，但qmake比cmake更加简洁清晰。
如果读者希望写一个跨平台的库的话，
或许cmake是比qmake更加优异的选择。
但读者明确是写一个特定的应用程序的话，
qmake就比cmake优秀的多。
qmake比cmake确实功能较少，
但从另一个角度，
qmake比cmake更加专注。
通过本节，
读者会发现只需要学习可怜的一点内容，
就可以使用qmake搭建出复杂的程序架构。

:tex_raw:[[%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]]
:the_book_subsubsection:[[ss000610]]
读者新建一个目录:tex_raw:[[\footnote{]]
本书所有目录都要求不包含空格和中文，以后不再赘述。
:tex_raw:[[}]]，
在此文件夹下新建一个“hellow_world.pro”文件，输入文件内容如
:tex_raw:[[\lstlistingname\ \ref{f000002}]]。
在此文件夹下建立“main.cpp”文件，输入内容如
:tex_raw:[[\lstlistingname\ \ref{f000003}]]。

:the_book_file:[[f000002]]
:the_book_file:[[f000003]]

使用QtCreator打开“hellow_world.pro”，
运行此项目。

现在来分析一下:tex_raw:[[\lstlistingname\ \ref{f000002}]]：
:tex_raw:[[\begin{itemize}]]
:tex_raw:[[\item ]]第1~2行表示不使用Qt库；
:tex_raw:[[\item ]]第4行表示这是一个控制台应用程序；
:tex_raw:[[\item ]]第6~10行表示在debug模式下输出目标名称是“hellow_world_debug”，
在release模式下输出目标名称是“hellow_world”；
:tex_raw:[[\item ]]第12行表示输出的是一个应用程序；
:tex_raw:[[\item ]]第14~18行表示使用C++17标准；
:tex_raw:[[\item ]]第20行将“main.cpp”加入编译过程；
:tex_raw:[[\item ]]第21行规定输出目录就是当前“pro”文件所在目录；
:tex_raw:[[\item ]]第23行定义了一个叫“NUMBER”的宏，宏的值是一个数字；
:tex_raw:[[\item ]]第24行定义了一个叫“HELLOW”的宏，宏的值是一个字符串；
:tex_raw:[[\item ]]第25行定义了一个叫“QT_DEPRECATED_WARNINGS”的宏，这个宏没有定义值；
:tex_raw:[[\end{itemize}]]


:tex_raw:[[%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]]
:the_book_subsubsection:[[ss000710]]

:tex_raw:[[%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]]
:the_book_subsubsection:[[ss000810]]

:the_book_tree_file:[[d000000]]

:the_book_file:[[f000004]]
:the_book_file:[[f000005]]
:the_book_file:[[f00000a]]
:the_book_file:[[f000006]]
:the_book_file:[[f000007]]
:the_book_file:[[f000008]]
:the_book_file:[[f000009]]
:the_book_file:[[f00000b]]
:the_book_file:[[f00000c]]

:tex_raw:[[%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]]
:the_book_subsubsection:[[ss000910]]





