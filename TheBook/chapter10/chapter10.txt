
:the_book_chapter:[==[c000019]==]

Qt Widgets中的模型视图非常难用。

在Qt Widgets中的模型视图
架构中，每一个单独的项不是
一个单独的QWidget。
而是通过QPainter进行绘制，
并通过一些函数响应鼠标键盘事件。

这就造成了如果读者想
实现一些复杂的动态效果就
不得不自己实现一个超级复杂
的状态机系统或者将每一个数据项
用诸如QListWidgetItem进行包装，
这样会浪费大量内存。

而在Qt Quick中一切可视元素都是一致的。

视图是QQuickItem的子类，
视图中的每一项也是QQuickItem的子类。
在Qt Quick体系中一切都是对象！

读者可以使用Qt Quick的模型视图架构，
将数据与渲染和控制完全分离。
而且，
这种实现是极其高效的，
即使模型拥有高达数亿元素。
Qt Quick的模型视图架构也可以快速
布局。
最终，只有当前可见部分被渲染，而当前不可见部分
除了布局信息之外，不耗费任何额外资源。

:tex_raw:[[

\input{chapter10/listmodel.tex}
\input{chapter10/treemodel.tex}

]]

:tex_raw:[[
% ______all_key_words
% the_book_chapter the_book_subsection the_book_subsubsection
% the_book_section the_book_image the_book_table
% the_book_file the_book_tree_file the_book_command_file
% littlelongworld tabbing ref
% figurename tablename filesourcenumbernameone
% treeindexnumbernameone commandnumbernameone footnote
% item itemize comment textbullet
% \hspace*{\parindent}
% FloatBarrier
]]
