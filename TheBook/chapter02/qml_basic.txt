
:the_book_section:[[c000011s000000]]

:tex_raw:[[%编码]]
:the_book_subsection:[[c000011s000000s03]]

自从Qt 5开始，Qt所有源代码只接受一种编码，
那就是UTF-8。

无论是C++、QML、JavaScript或者是qmake工程文件，
都应当只采用UTF-8编码。

特别的是，有些UTF-8文件开头会有三个特殊字符：
:tex_raw:[[\begin{littlelongworld}]]0xEF0xBB0xBF
:tex_raw:[[\end{littlelongworld}]]以以上三个特殊字符开头的UTF-8文件一般
被称为UTF-8 with BOM。

Qt集成开发环境所有编译器都识别BOM，除了qmake。

也就是读者在书写qmake工程文件（*.pro或者*.pri文件）时
一定不能给文件添加BOM。实际上，qmake只识别ASCII码的
127个字符。不应当在qmake工程文件中使用超出ASCII码的
字符。

但是在书写C++、QML、JavaScript文件时，可以给文件添加BOM。

在不同的操作系统下，系统的默认文件编码会有所不同。
由于历史原因和编程习惯，一些计算机语言不要求在源码中指定源码的
编码。
这就会造成，如果不给这些计算机语言的源码添加BOM，
编译器会错误的识别源代码编码，
造成编译错误和运行逻辑错误。

对于这类计算机语言，最好对它们的源码添加BOM。

而对于一些现代计算机语言比如Html，
一般的在源码中就指定了源码的编码。
因而，对于这些计算机语言，最好不要对它们的源码添加BOM。

本书对C++源文件，QML源文件，以及JavaScript源文件添加BOM
以最大程度降低平台差异性。

:tex_raw:[[%注释与帮助]]
:the_book_subsection:[[c000011s000000s02]]

C++、QML以及JavaScript的注释语法都是一致的：

:tex_raw:[[\begin{itemize}]]
:tex_raw:[[\item ]]//单行注释
:tex_raw:[[\item ]]/*多行注释*/
:tex_raw:[[\end{itemize}]]

而qmake的工程文件只支持单行注释：
:tex_raw:[[\begin{itemize}]]
:tex_raw:[[\item ]]#单行注释
:tex_raw:[[\end{itemize}]]

:tex_raw:[[
%http://www.glimix.com/archives/1594
%https://wiki.qt.io/QDoc
%http://doc.qt.io/qt-5/qdoc-index.html
]]
Qt集成开发环境自带一个工具可以
自动提取C++与QML中的注释并生成帮助
文件。

此工具被称为QDoc。

QDoc是一套庞大的体系，读者可以在QtCreator中输入
qdoc以获得更多帮助。
如:tex_raw:[[\figurename\ \ref{p000043}]]。

:the_book_image:[[p000043]]


:tex_raw:[[

\input{chapter02/qml_property.tex}

]]

:tex_raw:[[
% ______all_key_words
% the_book_chapter the_book_subsection the_book_subsubsection
% the_book_section the_book_image the_book_table
% the_book_file the_book_tree_file the_book_command_file
% littlelongworld tabbing ref
% figurename tablename filesourcenumbernameone
% treeindexnumbernameone commandnumbernameone footnote
% item itemize comment textbullet
% \hspace*{\parindent}
% FloatBarrier
]]

